name: Publish to MCP Registry

on:
  workflow_dispatch:

jobs:
  publish:
    name: Publish SchemaCrawler AI MCP Server
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # Required for OIDC authentication
      contents: read

    steps:

      - id: checkout-code
        name: Checkout code
        uses: actions/checkout@v5

      - id: install-mcp-publisher
        name: Install MCP Publisher
        shell: bash
        run: |
          # Install MCP Publisher
          # Resolve the latest release tag (e.g., v1.2.3)
          latest_tag=$(curl -s https://api.github.com/repos/modelcontextprotocol/registry/releases/latest | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/')
          # Strip the leading 'v' if present
          version=${latest_tag#v}
          # Construct platform-specific filename
          platform="$(uname -s | tr '[:upper:]' '[:lower:]')"
          arch="$(uname -m | sed 's/x86_64/amd64/;s/aarch64/arm64/')"
          filename="mcp-publisher_${version}_${platform}_${arch}.tar.gz"
          # Download and extract
          curl -L "https://github.com/modelcontextprotocol/registry/releases/download/${latest_tag}/${filename}" | tar xz mcp-publisher
          # Move to /usr/local/bin
          sudo mv mcp-publisher /usr/local/bin/

      - id: install-jq
        name: Install jq
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - id: publish-mcp-registry
        name: Publish to MCP Registry
        shell: bash
        run: |
          # Publish to MCP Registry
          mcp-publisher --version
          mcp-publisher login github-oidc
          cp \
            ./schemacrawler-ai-mcpserver/mcp-server-registration.json \
            ./server.json
          mcp-publisher publish
          mcp-publisher logout

      - id: show-mcp-registration
        name: Show MCP registration
        shell: bash
        if: always()
        run: |
          # Show last registered version
          curl -s -X GET "https://registry.modelcontextprotocol.io/v0/servers?search=schemacrawler-ai" \
            -H "accept: application/json" | \
            jq '.servers[0] | {name, version, _meta}' > output.json
          echo '```json' >> $GITHUB_STEP_SUMMARY
          cat output.json >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
